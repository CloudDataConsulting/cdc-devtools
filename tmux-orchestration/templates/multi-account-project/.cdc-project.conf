# CDC Multi-Account Project Configuration
# Example showing tmux windows with isolated secret contexts

PROJECT_NAME="multi-cloud-etl"
PROJECT_TYPE="data-pipeline"

# Define different config files for different purposes
declare -A secrets_configs=(
    ["orchestrator"]="./configs/orchestrator-config.yaml"
    ["aws-worker"]="./configs/aws-config.yaml"  
    ["gcp-worker"]="./configs/gcp-config.yaml"
    ["azure-worker"]="./configs/azure-config.yaml"
    ["monitoring"]="./configs/monitoring-config.yaml"
)

# Tmux window configurations with isolated credentials
TMUX_WINDOWS=(
    "orchestrator|default|.|python orchestrator.py"
    "aws-etl|aws_prod|./aws|python etl_worker.py" 
    "gcp-etl|gcp_prod|./gcp|python etl_worker.py"
    "azure-etl|azure_prod|./azure|python etl_worker.py"
    "terraform|terraform_backend|./infrastructure|terraform workspace select dev"
    "monitoring|monitoring|./monitoring|python monitor.py"
)

# Window-specific startup commands
setup_orchestrator_window() {
    echo "üéØ Orchestrator using config: ${secrets_configs[orchestrator]}"
    echo "This window coordinates work across all cloud providers"
}

setup_aws_window() {
    echo "‚òÅÔ∏è  AWS ETL Worker"
    echo "Using AWS production credentials from ${secrets_configs[aws-worker]}"
}

setup_gcp_window() {
    echo "‚òÅÔ∏è  GCP ETL Worker"  
    echo "Using GCP service account from ${secrets_configs[gcp-worker]}"
}

setup_terraform_window() {
    echo "üèóÔ∏è  Terraform Infrastructure"
    echo "Using dedicated backend credentials - no production access"
}

# Project-specific functions
validate_all_configs() {
    echo "Validating all configuration files..."
    for window in "${!secrets_configs[@]}"; do
        if [[ -f "${secrets_configs[$window]}" ]]; then
            echo "‚úÖ $window: ${secrets_configs[$window]}"
        else
            echo "‚ùå $window: ${secrets_configs[$window]} (missing)"
        fi
    done
}

# Custom session setup
create_project_session() {
    local session_name="${1:-$PROJECT_NAME}"
    
    # Source tmux secrets integration
    source "$CDC_DEVTOOLS_PATH/tmux-orchestration/core/tmux_secrets_integration.sh"
    
    # Create session
    tmux new-session -d -s "$session_name"
    
    # Create windows with isolated configs
    for window in "${!secrets_configs[@]}"; do
        create_window_with_config "$window" "${secrets_configs[$window]}"
    done
    
    # Attach to session
    tmux attach-session -t "$session_name"
}